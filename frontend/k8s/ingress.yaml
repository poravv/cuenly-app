apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cuenly-ingress
  namespace: cuenly-frontend
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    acme.cert-manager.io/http01-edit-in-place: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "900"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "900"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    # Configuración CORS para el backend
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://app.cuenly.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - app.cuenly.com
      secretName: cuenly-frontend-tls-secret
  rules:
    - host: app.cuenly.com
      http:
        paths:
          # ===== TODO EL TRÁFICO VA AL FRONTEND =====
          # El nginx del frontend maneja internamente el proxy a las APIs del backend
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cuenly-frontend-service
                port:
                  number: 80

