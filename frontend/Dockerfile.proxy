# Multi-stage build para Frontend con Nginx Proxy
FROM node:16-alpine as build

WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm install

COPY . .
RUN npm run build --prod

# Nginx con configuración de proxy
FROM nginx:alpine

# Add curl for exec probes (if used)
RUN apk add --no-cache curl

# Copiar archivos del frontend construido
COPY --from=build /app/dist/cuenlyapp-frontend /usr/share/nginx/html

# Copiar configuración de nginx proxy (se monta como volumen)
# La configuración se montará desde nginx/nginx-proxy.conf

# Crear página de error personalizada
RUN echo '<html><body><h1>CuenlyApp Temporalmente No Disponible</h1><p>El servicio se está reiniciando...</p></body></html>' > /usr/share/nginx/html/50x.html

# Crear directorio para templates de nginx
RUN mkdir -p /etc/nginx/templates

# Crear configuración estática para Docker Compose
RUN echo 'server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    # API proxy para Docker Compose \
    location ~ ^/(api|user|v2|status|process|upload|upload-xml|job|tasks|prefs|email-config|email-configs|export-templates|export|invoices) { \
        proxy_pass http://cuenlyapp-backend:8000; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade \$http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host \$host; \
        proxy_set_header X-Real-IP \$remote_addr; \
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto \$scheme; \
        proxy_cache_bypass \$http_upgrade; \
        client_max_body_size 50M; \
    } \
    \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    location /health { return 200; } \
}' > /etc/nginx/conf.d/default.conf

# Script de entrada que maneja tanto Docker Compose como Kubernetes
COPY <<EOF /docker-entrypoint.sh
#!/bin/sh
set -e

echo "🔧 Configurando proxy nginx..."

if [ -n "\$BACKEND_HOST" ]; then
  echo "🔍 Usando BACKEND_HOST: \$BACKEND_HOST (Kubernetes)"
  sed -i "s|cuenlyapp-backend:8000|\$BACKEND_HOST|g" /etc/nginx/conf.d/default.conf
else
  echo "🔍 Usando configuración por defecto (Docker Compose)"
fi

echo "📋 Configuración final:"
cat /etc/nginx/conf.d/default.conf
echo "🚀 Iniciando nginx..."
exec nginx -g "daemon off;"
EOF

RUN chmod +x /docker-entrypoint.sh

# Exponer puerto 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

CMD ["/docker-entrypoint.sh"]
