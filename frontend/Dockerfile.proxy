# Multi-stage build para Frontend con Nginx Proxy
FROM node:16-alpine as build

WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm install

COPY . .
RUN npm run build --prod

# Nginx con configuración de proxy
FROM nginx:alpine

# Add curl for exec probes (if used)
RUN apk add --no-cache curl

# Copiar archivos del frontend construido
COPY --from=build /app/dist/cuenlyapp-frontend /usr/share/nginx/html

# Copiar configuración de nginx proxy (se monta como volumen)
# La configuración se montará desde nginx/nginx-proxy.conf

# Crear página de error personalizada
RUN echo '<html><body><h1>CuenlyApp Temporalmente No Disponible</h1><p>El servicio se está reiniciando...</p></body></html>' > /usr/share/nginx/html/50x.html && \
    echo 'server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    # API proxy (in-cluster)
    location ~ ^/(v2|status|process|upload|upload-xml|job|tasks|prefs|email-config|email-configs|invoices) { \
        proxy_pass http://cuenly-backend-service.cuenly-backend.svc.cluster.local:8000; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
    \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    location /health { return 200; } \
}' > /etc/nginx/conf.d/default.conf

# Exponer puerto 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost/ || exit 1

CMD ["nginx", "-g", "daemon off;"]
