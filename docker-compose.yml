# CuenlyApp - Docker Compose Unificado
# Uso:
#   docker-compose up -d                       # Modo proxy (solo puerto 4200) - POR DEFECTO
#   docker-compose --profile dev up -d         # Modo desarrollo (puertos 4200, 8000, 6379)
#   docker-compose --profile production up -d  # Modo producción (con Nginx completo)

services:
  # MongoDB - Base de datos principal
  mongodb:
    image: mongo:7-jammy
    container_name: cuenlyapp-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=cuenlyapp
      - MONGO_INITDB_ROOT_PASSWORD=cuenlyapp2025
      - MONGO_INITDB_DATABASE=cuenlyapp_warehouse
    volumes:
      - mongodb_data:/data/db
      - ./config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"  # Exponer MongoDB para conexión externa
    networks:
      - cuenlyapp-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Redis eliminado: no utilizado actualmente

  # Backend API - Modo proxy por defecto (sin puerto expuesto)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cuenlyapp-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      - MONGODB_URL=mongodb://cuenlyapp:cuenlyapp2025@mongodb:27017/cuenlyapp_warehouse?authSource=admin
      - DEBUG=true
      - LOG_LEVEL=INFO
      - TZ=America/Asuncion
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - cuenlyapp-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Frontend - Modo proxy por defecto (con Nginx proxy)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.proxy
    container_name: cuenlyapp-frontend
    restart: unless-stopped
    environment:
      - TZ=America/Asuncion
    ports:
      - "4200:80"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - cuenlyapp-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servicios para modo desarrollo (perfil dev)
  mongodb-dev:
    image: mongo:7-jammy
    container_name: cuenlyapp-mongodb-dev
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=cuenlyapp
      - MONGO_INITDB_ROOT_PASSWORD=cuenlyapp2025
      - MONGO_INITDB_DATABASE=cuenlyapp_warehouse
    volumes:
      - mongodb_data:/data/db
      - ./config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - cuenlyapp-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    ports:
      - "27017:27017"  # Puerto expuesto en modo desarrollo
    profiles:
      - dev

  # Redis-dev eliminado: no utilizado

  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cuenlyapp-backend-dev
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      - MONGODB_URL=mongodb://cuenlyapp:cuenlyapp2025@mongodb-dev:27017/cuenlyapp_warehouse?authSource=admin
      - DEBUG=true
      - LOG_LEVEL=INFO
      - TZ=America/Asuncion
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - cuenlyapp-network
    depends_on:
      mongodb-dev:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    ports:
      - "8000:8000"  # Puerto expuesto en modo desarrollo
    profiles:
      - dev

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cuenlyapp-frontend-dev
    restart: unless-stopped
    environment:
      - TZ=America/Asuncion
    ports:
      - "4200:80"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - cuenlyapp-network
    depends_on:
      - backend-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - dev

  # Nginx para modo producción
  nginx:
    image: nginx:alpine
    container_name: cuenlyapp-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - cuenlyapp-network
    depends_on:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - production

networks:
  cuenlyapp-network:
    driver: bridge
    name: cuenlyapp-network

volumes:
  mongodb_data:
    driver: local
    name: cuenlyapp_mongodb_data
