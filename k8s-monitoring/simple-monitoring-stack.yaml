# Stack de monitoreo simplificado - Sin problemas de permisos
# Usa emptyDir en lugar de hostPath para evitar problemas

---
apiVersion: v1
kind: Namespace
metadata:
  name: cuenly-monitoring
  labels:
    name: cuenly-monitoring

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cuenly-monitoring
  namespace: cuenly-monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cuenly-monitoring
rules:
- apiGroups: [""]
  resources:
    - nodes
    - nodes/proxy
    - services
    - endpoints
    - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
    - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cuenly-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cuenly-monitoring
subjects:
- kind: ServiceAccount
  name: cuenly-monitoring
  namespace: cuenly-monitoring

---
# Loki - Logs centralizado (emptyDir)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cuenly-loki
  namespace: cuenly-monitoring
  labels:
    app: cuenly-loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cuenly-loki
  template:
    metadata:
      labels:
        app: cuenly-loki
    spec:
      serviceAccountName: cuenly-monitoring
      containers:
      - name: loki
        image: grafana/loki:2.9.0
        args:
          - -config.file=/etc/loki/loki.yaml
        ports:
        - containerPort: 3100
          name: http-metrics
        volumeMounts:
        - name: config
          mountPath: /etc/loki
        - name: storage
          mountPath: /loki
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
      volumes:
      - name: config
        configMap:
          name: loki-config
      - name: storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: cuenly-loki
  namespace: cuenly-monitoring
  labels:
    app: cuenly-loki
spec:
  ports:
  - port: 3100
    targetPort: 3100
    name: http
  selector:
    app: cuenly-loki

---
# Prometheus - MÃ©tricas (emptyDir)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cuenly-prometheus
  namespace: cuenly-monitoring
  labels:
    app: cuenly-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cuenly-prometheus
  template:
    metadata:
      labels:
        app: cuenly-prometheus
    spec:
      serviceAccountName: cuenly-monitoring
      containers:
      - name: prometheus
        image: prom/prometheus:v2.40.0
        args:
          - --config.file=/etc/prometheus/prometheus.yml
          - --storage.tsdb.path=/prometheus/
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --storage.tsdb.retention.time=7d
          - --web.enable-lifecycle
        ports:
        - containerPort: 9090
          name: web
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: storage
          mountPath: /prometheus
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 512Mi
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: cuenly-prometheus
  namespace: cuenly-monitoring
  labels:
    app: cuenly-prometheus
spec:
  ports:
  - port: 9090
    targetPort: 9090
    name: web
  selector:
    app: cuenly-prometheus

---
# ConfigMap para Loki
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: cuenly-monitoring
data:
  loki.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100

    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        kvstore:
          store: inmemory

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/boltdb-shipper-active
        cache_location: /loki/boltdb-shipper-cache
        shared_store: filesystem
      filesystem:
        directory: /loki/chunks

    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h

---
# ConfigMap para Prometheus
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: cuenly-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'cuenly-backend'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - cuenly-backend
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      - job_name: 'cuenly-frontend'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - cuenly-frontend
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true