# Deployment de AlertManager para Kubernetes
# Archivo: backend/k8s/alertmanager-deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: cuenly-backend
  labels:
    app: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      # Init container para procesar el template con envsubst
      initContainers:
      - name: config-init
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          # Copiar el template y reemplazar variables
          cp /tmp/config-template/config.yml /tmp/config-processed/config.yml
          
          # Reemplazar variables manualmente (busybox no tiene envsubst)
          sed -i "s|\${ALERTMANAGER_SMTP_HOST}|$ALERTMANAGER_SMTP_HOST|g" /tmp/config-processed/config.yml
          sed -i "s|\${ALERTMANAGER_SMTP_PORT}|$ALERTMANAGER_SMTP_PORT|g" /tmp/config-processed/config.yml
          sed -i "s|\${ALERTMANAGER_SMTP_USER}|$ALERTMANAGER_SMTP_USER|g" /tmp/config-processed/config.yml
          sed -i "s|\${ALERTMANAGER_SMTP_PASSWORD}|$ALERTMANAGER_SMTP_PASSWORD|g" /tmp/config-processed/config.yml
          sed -i "s|\${ALERTMANAGER_EMAIL_TO}|$ALERTMANAGER_EMAIL_TO|g" /tmp/config-processed/config.yml
          
          echo "‚úÖ Configuraci√≥n procesada correctamente"
          cat /tmp/config-processed/config.yml
        env:
        - name: ALERTMANAGER_SMTP_HOST
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: ALERTMANAGER_SMTP_HOST
        - name: ALERTMANAGER_SMTP_PORT
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: ALERTMANAGER_SMTP_PORT
        - name: ALERTMANAGER_SMTP_USER
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: ALERTMANAGER_SMTP_USER
        - name: ALERTMANAGER_SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: ALERTMANAGER_SMTP_PASSWORD
      volumes:
      - name: config-template
        configMap:
          name: alertmanager-config
      - name: config-processed
        emptyDir: {}
      - name: storage-volume
        emptyDir: {}:
        - name: config-template
          mountPath: /tmp/config-template
        - name: config-processed
          mountPath: /tmp/config-processed
      
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.26.0
        args:
        - '--config.file=/etc/alertmanager/config.yml'
        - '--storage.path=/alertmanager'
        - '--web.external-url=http://alertmanager:9093'
        ports:
        - containerPort: 9093
        volumeMounts:
        - name: config-processed
          mountPath: /etc/alertmanager
        - name: storage-volume
          mountPath: /alertmanager
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9093
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: alertmanager-config
      - name: storage-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager-service
  namespace: cuenly-backend
spec:
  selector:
    app: alertmanager
  ports:
  - port: 9093
    targetPort: 9093
  type: ClusterIP

---
# ConfigMap con la configuraci√≥n de AlertManager usando variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: cuenly-backend
data:
  config.yml: |
    global:
      smtp_smarthost: '${ALERTMANAGER_SMTP_HOST}:${ALERTMANAGER_SMTP_PORT}'
      smtp_from: '${ALERTMANAGER_SMTP_USER}'
      smtp_auth_username: '${ALERTMANAGER_SMTP_USER}'
      smtp_auth_password: '${ALERTMANAGER_SMTP_PASSWORD}'
      smtp_require_tls: true

    templates:
      - '/etc/alertmanager/templates/*.tmpl'

    route:
      group_by: ['alertname', 'severity']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'cuenly-team'
      
      routes:
      - match:
          severity: critical
        receiver: 'critical-alerts'
        group_wait: 5s
        repeat_interval: 30m
        
      - match:
          severity: warning
        receiver: 'warning-alerts'
        repeat_interval: 2h
        
      - match:
          category: business
        receiver: 'business-alerts'
        repeat_interval: 4h

    receivers:
    - name: 'cuenly-team'
      email_configs:
      - to: '${ALERTMANAGER_EMAIL_TO}'
        subject: '[Cuenly] Alerta: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alerta: {{ .Annotations.summary }}
          Descripci√≥n: {{ .Annotations.description }}
          Severidad: {{ .Labels.severity }}
          Servicio: {{ .Labels.service }}
          Tiempo: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          {{ end }}

    - name: 'critical-alerts'
      email_configs:
      - to: '${ALERTMANAGER_EMAIL_TO}'
        subject: 'üö® [CR√çTICO] {{ .GroupLabels.alertname }}'
        body: |
          ‚ö†Ô∏è ALERTA CR√çTICA EN CUENLY ‚ö†Ô∏è
          
          {{ range .Alerts }}
          Problema: {{ .Annotations.summary }}
          Detalles: {{ .Annotations.description }}
          Servicio: {{ .Labels.service }}
          Hora: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          üîó Runbook: {{ .Annotations.runbook_url }}
          {{ end }}

    - name: 'warning-alerts'
      email_configs:
      - to: '${ALERTMANAGER_EMAIL_TO}'
        subject: '‚ö†Ô∏è [WARNING] {{ .GroupLabels.alertname }}'

    - name: 'business-alerts'
      email_configs:
      - to: '${ALERTMANAGER_EMAIL_TO}'
        subject: 'üìä [BUSINESS] {{ .GroupLabels.alertname }}'

    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['service', 'instance']
      
    - source_match:
        alertname: 'CuenlyBackendDown'
      target_match_re:
        alertname: 'Cuenly.*'
      equal: ['service']